#%RAML 1.0
baseUri: https://mocksvc.mulesoft.com/mocks/5df94753-53e8-4063-b799-9aac53daae22/api # baseUri: https://mocksvc.mulesoft.com/mocks/7356f5a9-f0fb-4555-8da5-e1f6bb17af09/api # baseUri: https://mocksvc.mulesoft.com/mocks/f17d6a41-d417-4376-9133-32a5ddbb66b3/api # baseUri: http://localhost:8081/api
title: Mobile Experience API
version: 4.2
mediaType: [ application/xml, application/json ]

uses:
  User: dataTypes/elements/user.raml
  Error: dataTypes/elements/error.raml
  Product: dataTypes/elements/product.raml
  Order: dataTypes/elements/order.raml
  Session: dataTypes/elements/session.raml

types:
  user: User.user
  error: Error.error
  product: Product.product
  order: Order.order
  shoppingCart: Order.shoppingCart
  orderConfirmationRequest: Order.orderConfirmationRequest
  orderConfirmation: Order.orderConfirmation
  session: Session.session 

traits:
  headers: !include traits/headers.raml
  collection: !include traits/collection.raml
  client-id-required: !include traits/client-enforcement.raml
  
/products:
  /search:
    is: [headers, collection, client-id-required]
    description: Search resource supporting extend product list searches
    get:      
      queryParameters:
        name:
          description: use to query products by name
          type: string
          example: playdo
          required: false
      responses:
        200:
          body:
            application/json:
              type: product[]
              example: !include examples/product-collection.raml
  /product/{product_id}:
    is: [headers, client-id-required]
    description: Get product instance details
    get:
      responses:
        200:
          body:
              type: product
              example: !include examples/product-single.raml

/orders:
  is: [headers, client-id-required]
  /search:
    get:
      queryParameters:
        user_id:
          description: use to query all orders of a user
          required: true
          example: 1964401a-a8b3-40c1-b86e-d8b9f75b5842
      responses:
        200:
          body:
            application/json:
              type: order[]
              example: !include examples/order-collection.raml
  /order/{order_id}:
    is: [headers, client-id-required]
    description: Order instance resource allowing to update orders
    get:
      description:  Retrieve order details
      responses:
        200:
          body:
            application/json:
              type: order
              example: !include examples/order-single.raml

/user:
  is: [headers, client-id-required]
  post:
    description: The user registration
    body:
      application/json:
        type: user
        example: !include ./examples/user-single.raml
    responses:
      201:
        body:
          application/json:
            type: user
            example: !include examples/user-single.raml
      400:
        description: The user information is invalid
        body:
          application/json:
            type: error[]
            example: !include examples/error-collection.raml
  /{userId}:
    uriParameters:
      userId:
        displayName: The user unique identifier
        example: "123123"
        required: true
    get:
      description: Returns the information about the user
      responses:
        200:
          body:
            application/json:
              type: user
              example: !include examples/user-single.raml
        404:
          description: The user does not exist
          body:
            application/json:
              type: error
              example: !include examples/error-single.raml                          
    put:
      description: Update user details
      body:
        application/json:
          type: user
          example: !include examples/user-single.raml
      responses:
        204:
          description: No body content - user updated successfully
        404:
          description: The user does not exist
          body:
            application/json:
              type: error
              example: !include examples/error-single.raml

    /shopping_cart:
      get: 
        responses:
          200:
            body:
              application/json:
                type: shoppingCart
                example: !include examples/shoppingcart-single.raml
                
      put:
        body:
          application/json:
            type: shoppingCart
            
            example: !include examples/shoppingcart-single-update.raml
        responses:
          204:
      /confirmation:
        description: confirm the current shopping cart - that will create an order in the backend and provide the link to the order resource
        post:
          body:
            application/json:
              type: orderConfirmationRequest
              example: !include examples/order-confirmation-request-single.raml
          responses:
            201:
              body:
                application/json:
                  type: orderConfirmation
                  example: !include examples/order-confirmation-single.raml
                  displayName: experienceAPIExample
/session:
  is: [headers, client-id-required]
  post:
    description: Creates a new sessions for the User to login
    body:
      application/json:
        type: session
        example: !include examples/session-single.raml
    responses:
      201:
        description: Successfully create a new user session
        body:
          application/json:
            type: user
            example: !include examples/user-single.raml
      400:
        description: There is no user for that username and password
        body:
          application/json:
            type: error[]
            example: !include examples/error-collection.raml
      404:
        description: The user does not exist
        body:
          application/json:
            type: error
            example: !include examples/error-single.raml